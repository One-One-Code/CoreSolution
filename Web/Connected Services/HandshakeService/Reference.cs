//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     //
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace HandshakeService
{
    using System.Runtime.Serialization;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "0.5.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Partner", Namespace="http://schemas.datacontract.org/2004/07/Motk.Model.Handshake")]
    public partial class Partner : object
    {
        
        private string DomainField;
        
        private System.DateTime EndDateTimeField;
        
        private string PartnerAccessUrlField;
        
        private string PartnerCodeField;
        
        private string PartnerExtensionField;
        
        private HandshakeService.PartnerExtension PartnerExtensionInfoField;
        
        private int PartnerIdField;
        
        private string PartnerKeyField;
        
        private string PartnerSecretField;
        
        private string PartnerTokenField;
        
        private short PartnerTypeIdField;
        
        private System.DateTime StartDateTimeField;
        
        private short StatusFlagField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Domain
        {
            get
            {
                return this.DomainField;
            }
            set
            {
                this.DomainField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime EndDateTime
        {
            get
            {
                return this.EndDateTimeField;
            }
            set
            {
                this.EndDateTimeField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PartnerAccessUrl
        {
            get
            {
                return this.PartnerAccessUrlField;
            }
            set
            {
                this.PartnerAccessUrlField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PartnerCode
        {
            get
            {
                return this.PartnerCodeField;
            }
            set
            {
                this.PartnerCodeField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PartnerExtension
        {
            get
            {
                return this.PartnerExtensionField;
            }
            set
            {
                this.PartnerExtensionField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public HandshakeService.PartnerExtension PartnerExtensionInfo
        {
            get
            {
                return this.PartnerExtensionInfoField;
            }
            set
            {
                this.PartnerExtensionInfoField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PartnerId
        {
            get
            {
                return this.PartnerIdField;
            }
            set
            {
                this.PartnerIdField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PartnerKey
        {
            get
            {
                return this.PartnerKeyField;
            }
            set
            {
                this.PartnerKeyField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PartnerSecret
        {
            get
            {
                return this.PartnerSecretField;
            }
            set
            {
                this.PartnerSecretField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PartnerToken
        {
            get
            {
                return this.PartnerTokenField;
            }
            set
            {
                this.PartnerTokenField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short PartnerTypeId
        {
            get
            {
                return this.PartnerTypeIdField;
            }
            set
            {
                this.PartnerTypeIdField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime StartDateTime
        {
            get
            {
                return this.StartDateTimeField;
            }
            set
            {
                this.StartDateTimeField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short StatusFlag
        {
            get
            {
                return this.StatusFlagField;
            }
            set
            {
                this.StatusFlagField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "0.5.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PartnerExtension", Namespace="http://schemas.datacontract.org/2004/07/Motk.Model.Handshake")]
    public partial class PartnerExtension : object
    {
        
        private string PartnerAltField;
        
        private string PartnerHomePageField;
        
        private string PartnerLogoField;
        
        private string PartnerLogoSmallField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PartnerAlt
        {
            get
            {
                return this.PartnerAltField;
            }
            set
            {
                this.PartnerAltField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PartnerHomePage
        {
            get
            {
                return this.PartnerHomePageField;
            }
            set
            {
                this.PartnerHomePageField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PartnerLogo
        {
            get
            {
                return this.PartnerLogoField;
            }
            set
            {
                this.PartnerLogoField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PartnerLogoSmall
        {
            get
            {
                return this.PartnerLogoSmallField;
            }
            set
            {
                this.PartnerLogoSmallField = value;
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "0.5.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PartnerSourceTypeEnum", Namespace="http://schemas.datacontract.org/2004/07/Motk.Model.Enum")]
    public enum PartnerSourceTypeEnum : int
    {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        User = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        School = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ClassRoom = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TeacherExam = 4,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "0.5.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PartnerSource", Namespace="http://schemas.datacontract.org/2004/07/Motk.Model.Handshake")]
    public partial class PartnerSource : object
    {
        
        private int PartnerIdField;
        
        private long PartnerSourceIdField;
        
        private HandshakeService.PartnerSourceTypeEnum PartnerSourceTypeIdField;
        
        private short StatusFlagField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PartnerId
        {
            get
            {
                return this.PartnerIdField;
            }
            set
            {
                this.PartnerIdField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long PartnerSourceId
        {
            get
            {
                return this.PartnerSourceIdField;
            }
            set
            {
                this.PartnerSourceIdField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public HandshakeService.PartnerSourceTypeEnum PartnerSourceTypeId
        {
            get
            {
                return this.PartnerSourceTypeIdField;
            }
            set
            {
                this.PartnerSourceTypeIdField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short StatusFlag
        {
            get
            {
                return this.StatusFlagField;
            }
            set
            {
                this.StatusFlagField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "0.5.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RequestBase", Namespace="http://schemas.datacontract.org/2004/07/Motk.Model.Common")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(HandshakeService.PartnerSessionRequest))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(HandshakeService.CheckPartnerHasApiPermissionRequest))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(HandshakeService.CheckSourceIsInPartnerSourceRequest))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(HandshakeService.GetPartnerSceneLinkConfigRequest))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(HandshakeService.CreateSessionRequest))]
    public partial class RequestBase : object
    {
        
        private HandshakeService.RequestFromTypeEnum RequestFromTypeField;
        
        private int UserIdField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public HandshakeService.RequestFromTypeEnum RequestFromType
        {
            get
            {
                return this.RequestFromTypeField;
            }
            set
            {
                this.RequestFromTypeField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UserId
        {
            get
            {
                return this.UserIdField;
            }
            set
            {
                this.UserIdField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "0.5.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PartnerSessionRequest", Namespace="http://schemas.datacontract.org/2004/07/Motk.Model.Handshake.Request")]
    public partial class PartnerSessionRequest : HandshakeService.RequestBase
    {
        
        private string SessionIdField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SessionId
        {
            get
            {
                return this.SessionIdField;
            }
            set
            {
                this.SessionIdField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "0.5.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CheckPartnerHasApiPermissionRequest", Namespace="http://schemas.datacontract.org/2004/07/Motk.Model.Handshake.Request")]
    public partial class CheckPartnerHasApiPermissionRequest : HandshakeService.RequestBase
    {
        
        private string ApiUrlField;
        
        private int PartnerIdField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ApiUrl
        {
            get
            {
                return this.ApiUrlField;
            }
            set
            {
                this.ApiUrlField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PartnerId
        {
            get
            {
                return this.PartnerIdField;
            }
            set
            {
                this.PartnerIdField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "0.5.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CheckSourceIsInPartnerSourceRequest", Namespace="http://schemas.datacontract.org/2004/07/Motk.Model.Handshake.Request")]
    public partial class CheckSourceIsInPartnerSourceRequest : HandshakeService.RequestBase
    {
        
        private int PartnerIdField;
        
        private long PartnerSourceIdField;
        
        private HandshakeService.PartnerSourceTypeEnum PartnerSourceTypeField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PartnerId
        {
            get
            {
                return this.PartnerIdField;
            }
            set
            {
                this.PartnerIdField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long PartnerSourceId
        {
            get
            {
                return this.PartnerSourceIdField;
            }
            set
            {
                this.PartnerSourceIdField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public HandshakeService.PartnerSourceTypeEnum PartnerSourceType
        {
            get
            {
                return this.PartnerSourceTypeField;
            }
            set
            {
                this.PartnerSourceTypeField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "0.5.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetPartnerSceneLinkConfigRequest", Namespace="http://schemas.datacontract.org/2004/07/Motk.Model.Handshake.Request")]
    public partial class GetPartnerSceneLinkConfigRequest : HandshakeService.RequestBase
    {
        
        private int PartnerIdField;
        
        private HandshakeService.PartnerSceneTypeEnum PartnerSceneTypeField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PartnerId
        {
            get
            {
                return this.PartnerIdField;
            }
            set
            {
                this.PartnerIdField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public HandshakeService.PartnerSceneTypeEnum PartnerSceneType
        {
            get
            {
                return this.PartnerSceneTypeField;
            }
            set
            {
                this.PartnerSceneTypeField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "0.5.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CreateSessionRequest", Namespace="http://schemas.datacontract.org/2004/07/Motk.Model.UserManagement.Request")]
    public partial class CreateSessionRequest : HandshakeService.RequestBase
    {
        
        private int PartnerIdField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PartnerId
        {
            get
            {
                return this.PartnerIdField;
            }
            set
            {
                this.PartnerIdField = value;
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "0.5.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RequestFromTypeEnum", Namespace="http://schemas.datacontract.org/2004/07/Motk.Model.Enum")]
    public enum RequestFromTypeEnum : int
    {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Pc = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Android = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Ios = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Ahd = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Wap = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Ihd = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Api = 7,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "0.5.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PartnerSceneTypeEnum", Namespace="http://schemas.datacontract.org/2004/07/Motk.Model.Enum")]
    public enum PartnerSceneTypeEnum : int
    {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CreateTeacherExam = 1,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "0.5.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CreateSessionResponse", Namespace="http://schemas.datacontract.org/2004/07/Motk.Model.UserManagement.Response")]
    public partial class CreateSessionResponse : object
    {
        
        private int ExpireAtField;
        
        private string SessionIdField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ExpireAt
        {
            get
            {
                return this.ExpireAtField;
            }
            set
            {
                this.ExpireAtField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SessionId
        {
            get
            {
                return this.SessionIdField;
            }
            set
            {
                this.SessionIdField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "0.5.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PartnerSessionView", Namespace="http://schemas.datacontract.org/2004/07/Motk.Model.Handshake.View")]
    public partial class PartnerSessionView : object
    {
        
        private System.DateTime CreateDateTimeField;
        
        private int ExpireAtField;
        
        private int PartnerIdField;
        
        private string PartnerKeyField;
        
        private string SessionIdField;
        
        private int UserIdField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CreateDateTime
        {
            get
            {
                return this.CreateDateTimeField;
            }
            set
            {
                this.CreateDateTimeField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ExpireAt
        {
            get
            {
                return this.ExpireAtField;
            }
            set
            {
                this.ExpireAtField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PartnerId
        {
            get
            {
                return this.PartnerIdField;
            }
            set
            {
                this.PartnerIdField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PartnerKey
        {
            get
            {
                return this.PartnerKeyField;
            }
            set
            {
                this.PartnerKeyField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SessionId
        {
            get
            {
                return this.SessionIdField;
            }
            set
            {
                this.SessionIdField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UserId
        {
            get
            {
                return this.UserIdField;
            }
            set
            {
                this.UserIdField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "0.5.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PartnerLinkConfig", Namespace="http://schemas.datacontract.org/2004/07/Motk.Model.Handshake")]
    public partial class PartnerLinkConfig : object
    {
        
        private int PartnerIdField;
        
        private sbyte PartnerSceneTypeIdField;
        
        private sbyte RedirectTypeIdField;
        
        private string UrlField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PartnerId
        {
            get
            {
                return this.PartnerIdField;
            }
            set
            {
                this.PartnerIdField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public sbyte PartnerSceneTypeId
        {
            get
            {
                return this.PartnerSceneTypeIdField;
            }
            set
            {
                this.PartnerSceneTypeIdField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public sbyte RedirectTypeId
        {
            get
            {
                return this.RedirectTypeIdField;
            }
            set
            {
                this.RedirectTypeIdField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Url
        {
            get
            {
                return this.UrlField;
            }
            set
            {
                this.UrlField = value;
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "0.5.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="HandshakeService.IHandshakeService")]
    public interface IHandshakeService
    {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHandshakeService/GetPartner", ReplyAction="http://tempuri.org/IHandshakeService/GetPartnerResponse")]
        System.Threading.Tasks.Task<HandshakeService.Partner> GetPartnerAsync(string partnerKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHandshakeService/GetPartnerSource", ReplyAction="http://tempuri.org/IHandshakeService/GetPartnerSourceResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<HandshakeService.PartnerSource>> GetPartnerSourceAsync(int partnerId, HandshakeService.PartnerSourceTypeEnum partnerSourceTypeId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHandshakeService/GetPartnerSourceByPartnerKey", ReplyAction="http://tempuri.org/IHandshakeService/GetPartnerSourceByPartnerKeyResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<HandshakeService.PartnerSource>> GetPartnerSourceByPartnerKeyAsync(string partnerKey, HandshakeService.PartnerSourceTypeEnum partnerSourceTypeId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHandshakeService/SavePartnerSource", ReplyAction="http://tempuri.org/IHandshakeService/SavePartnerSourceResponse")]
        System.Threading.Tasks.Task<bool> SavePartnerSourceAsync(HandshakeService.PartnerSource partnerSource);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHandshakeService/CreateSession", ReplyAction="http://tempuri.org/IHandshakeService/CreateSessionResponse")]
        System.Threading.Tasks.Task<HandshakeService.CreateSessionResponse> CreateSessionAsync(HandshakeService.CreateSessionRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHandshakeService/GetPartnerSession", ReplyAction="http://tempuri.org/IHandshakeService/GetPartnerSessionResponse")]
        System.Threading.Tasks.Task<HandshakeService.PartnerSessionView> GetPartnerSessionAsync(HandshakeService.PartnerSessionRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHandshakeService/CheckPartnerHasApiPermission", ReplyAction="http://tempuri.org/IHandshakeService/CheckPartnerHasApiPermissionResponse")]
        System.Threading.Tasks.Task<bool> CheckPartnerHasApiPermissionAsync(HandshakeService.CheckPartnerHasApiPermissionRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHandshakeService/CheckSourceIsInPartnerSource", ReplyAction="http://tempuri.org/IHandshakeService/CheckSourceIsInPartnerSourceResponse")]
        System.Threading.Tasks.Task<bool> CheckSourceIsInPartnerSourceAsync(HandshakeService.CheckSourceIsInPartnerSourceRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHandshakeService/GetPartnerSceneLinkConfig", ReplyAction="http://tempuri.org/IHandshakeService/GetPartnerSceneLinkConfigResponse")]
        System.Threading.Tasks.Task<HandshakeService.PartnerLinkConfig> GetPartnerSceneLinkConfigAsync(HandshakeService.GetPartnerSceneLinkConfigRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHandshakeService/GetPartnerByDomain", ReplyAction="http://tempuri.org/IHandshakeService/GetPartnerByDomainResponse")]
        System.Threading.Tasks.Task<HandshakeService.Partner> GetPartnerByDomainAsync(string domain);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "0.5.0.0")]
    public interface IHandshakeServiceChannel : HandshakeService.IHandshakeService, System.ServiceModel.IClientChannel
    {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "0.5.0.0")]
    public partial class HandshakeServiceClient : System.ServiceModel.ClientBase<HandshakeService.IHandshakeService>, HandshakeService.IHandshakeService
    {
        
    /// <summary>
    /// Implement this partial method to configure the service endpoint.
    /// </summary>
    /// <param name="serviceEndpoint">The endpoint to configure</param>
    /// <param name="clientCredentials">The client credentials</param>
    static partial void ConfigureEndpoint(System.ServiceModel.Description.ServiceEndpoint serviceEndpoint, System.ServiceModel.Description.ClientCredentials clientCredentials);
        
        public HandshakeServiceClient() : 
                base(HandshakeServiceClient.GetDefaultBinding(), HandshakeServiceClient.GetDefaultEndpointAddress())
        {
            this.Endpoint.Name = EndpointConfiguration.BasicHttpBinding_IHandshakeService.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public HandshakeServiceClient(EndpointConfiguration endpointConfiguration) : 
                base(HandshakeServiceClient.GetBindingForEndpoint(endpointConfiguration), HandshakeServiceClient.GetEndpointAddress(endpointConfiguration))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public HandshakeServiceClient(EndpointConfiguration endpointConfiguration, string remoteAddress) : 
                base(HandshakeServiceClient.GetBindingForEndpoint(endpointConfiguration), new System.ServiceModel.EndpointAddress(remoteAddress))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public HandshakeServiceClient(EndpointConfiguration endpointConfiguration, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(HandshakeServiceClient.GetBindingForEndpoint(endpointConfiguration), remoteAddress)
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public HandshakeServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress)
        {
        }
        
        public System.Threading.Tasks.Task<HandshakeService.Partner> GetPartnerAsync(string partnerKey)
        {
            return base.Channel.GetPartnerAsync(partnerKey);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<HandshakeService.PartnerSource>> GetPartnerSourceAsync(int partnerId, HandshakeService.PartnerSourceTypeEnum partnerSourceTypeId)
        {
            return base.Channel.GetPartnerSourceAsync(partnerId, partnerSourceTypeId);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<HandshakeService.PartnerSource>> GetPartnerSourceByPartnerKeyAsync(string partnerKey, HandshakeService.PartnerSourceTypeEnum partnerSourceTypeId)
        {
            return base.Channel.GetPartnerSourceByPartnerKeyAsync(partnerKey, partnerSourceTypeId);
        }
        
        public System.Threading.Tasks.Task<bool> SavePartnerSourceAsync(HandshakeService.PartnerSource partnerSource)
        {
            return base.Channel.SavePartnerSourceAsync(partnerSource);
        }
        
        public System.Threading.Tasks.Task<HandshakeService.CreateSessionResponse> CreateSessionAsync(HandshakeService.CreateSessionRequest request)
        {
            return base.Channel.CreateSessionAsync(request);
        }
        
        public System.Threading.Tasks.Task<HandshakeService.PartnerSessionView> GetPartnerSessionAsync(HandshakeService.PartnerSessionRequest request)
        {
            return base.Channel.GetPartnerSessionAsync(request);
        }
        
        public System.Threading.Tasks.Task<bool> CheckPartnerHasApiPermissionAsync(HandshakeService.CheckPartnerHasApiPermissionRequest request)
        {
            return base.Channel.CheckPartnerHasApiPermissionAsync(request);
        }
        
        public System.Threading.Tasks.Task<bool> CheckSourceIsInPartnerSourceAsync(HandshakeService.CheckSourceIsInPartnerSourceRequest request)
        {
            return base.Channel.CheckSourceIsInPartnerSourceAsync(request);
        }
        
        public System.Threading.Tasks.Task<HandshakeService.PartnerLinkConfig> GetPartnerSceneLinkConfigAsync(HandshakeService.GetPartnerSceneLinkConfigRequest request)
        {
            return base.Channel.GetPartnerSceneLinkConfigAsync(request);
        }
        
        public System.Threading.Tasks.Task<HandshakeService.Partner> GetPartnerByDomainAsync(string domain)
        {
            return base.Channel.GetPartnerByDomainAsync(domain);
        }
        
        public virtual System.Threading.Tasks.Task OpenAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndOpen));
        }
        
        public virtual System.Threading.Tasks.Task CloseAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginClose(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndClose));
        }
        
        private static System.ServiceModel.Channels.Binding GetBindingForEndpoint(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.BasicHttpBinding_IHandshakeService))
            {
                System.ServiceModel.BasicHttpBinding result = new System.ServiceModel.BasicHttpBinding();
                result.MaxBufferSize = int.MaxValue;
                result.ReaderQuotas = System.Xml.XmlDictionaryReaderQuotas.Max;
                result.MaxReceivedMessageSize = int.MaxValue;
                result.AllowCookies = true;
                return result;
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.EndpointAddress GetEndpointAddress(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.BasicHttpBinding_IHandshakeService))
            {
                return new System.ServiceModel.EndpointAddress("http://wf:40400/UserManagement/HandshakeService.svc");
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.Channels.Binding GetDefaultBinding()
        {
            return HandshakeServiceClient.GetBindingForEndpoint(EndpointConfiguration.BasicHttpBinding_IHandshakeService);
        }
        
        private static System.ServiceModel.EndpointAddress GetDefaultEndpointAddress()
        {
            return HandshakeServiceClient.GetEndpointAddress(EndpointConfiguration.BasicHttpBinding_IHandshakeService);
        }
        
        public enum EndpointConfiguration
        {
            
            BasicHttpBinding_IHandshakeService,
        }
    }
}
